// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_registry is a generated GoMock package.
package mock_registry

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// PushImageByID mocks base method
func (m *MockInterface) PushImageByID(imageID string) (string, error) {
	ret := m.ctrl.Call(m, "PushImageByID", imageID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PushImageByID indicates an expected call of PushImageByID
func (mr *MockInterfaceMockRecorder) PushImageByID(imageID interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PushImageByID", reflect.TypeOf((*MockInterface)(nil).PushImageByID), imageID)
}

// PushImage mocks base method
func (m *MockInterface) PushImage(reader io.Reader) (string, error) {
	ret := m.ctrl.Call(m, "PushImage", reader)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PushImage indicates an expected call of PushImage
func (mr *MockInterfaceMockRecorder) PushImage(reader interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PushImage", reflect.TypeOf((*MockInterface)(nil).PushImage), reader)
}

// DownloadImage mocks base method
func (m *MockInterface) DownloadImage(ipfsHash string) (string, error) {
	ret := m.ctrl.Call(m, "DownloadImage", ipfsHash)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownloadImage indicates an expected call of DownloadImage
func (mr *MockInterfaceMockRecorder) DownloadImage(ipfsHash interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadImage", reflect.TypeOf((*MockInterface)(nil).DownloadImage), ipfsHash)
}

// PullImage mocks base method
func (m *MockInterface) PullImage(ipfsHash string) (string, error) {
	ret := m.ctrl.Call(m, "PullImage", ipfsHash)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PullImage indicates an expected call of PullImage
func (mr *MockInterfaceMockRecorder) PullImage(ipfsHash interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PullImage", reflect.TypeOf((*MockInterface)(nil).PullImage), ipfsHash)
}
